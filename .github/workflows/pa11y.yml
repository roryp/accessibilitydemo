name: Pa11y Accessibility Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  accessibility-test:
    name: Pa11y Accessibility Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install pa11y dependencies
        run: |
          npm init -y
          npm install --save-dev pa11y-ci

      - name: Create pa11y configuration
        run: |
          echo '{
            "defaults": {
              "concurrency": 4,
              "standard": "WCAG2AA",
              "runners": ["axe"],
              "ignore": [
                "notice",
                "warning"
              ],
              "chromeLaunchConfig": {
                "args": ["--no-sandbox", "--disable-setuid-sandbox", "--disable-dev-shm-usage"]
              }
            }
          }' > .pa11yci

      - name: Start local server
        run: |
          python3 -m http.server 8080 &
          sleep 5

      - name: Test accessibility issues demo
        id: pa11y_issues
        continue-on-error: true
        run: |
          echo "Testing accessibility-issues-demo.html (expected to have issues)..."
          npx pa11y-ci http://localhost:8080/accessibility-issues-demo.html --reporter cli > pa11y_issues_output.txt 2>&1 || true
          echo "Issues demo test completed"

      - name: Test accessibility fixed demo
        id: pa11y_fixed
        continue-on-error: true
        run: |
          echo "Testing accessibility-fixed-demo.html (should pass)..."
          npx pa11y-ci http://localhost:8080/accessibility-fixed-demo.html --reporter cli > pa11y_fixed_output.txt 2>&1 || true
          echo "Fixed demo test completed"

      - name: Display results for issues demo
        run: |
          echo "=== Pa11y Results for accessibility-issues-demo.html ==="
          cat pa11y_issues_output.txt

      - name: Display results for fixed demo
        run: |
          echo "=== Pa11y Results for accessibility-fixed-demo.html ==="
          cat pa11y_fixed_output.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pa11y-results
          path: |
            pa11y_issues_output.txt
            pa11y_fixed_output.txt

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let issuesOutput = '';
            let fixedOutput = '';
            
            try {
              issuesOutput = fs.readFileSync('pa11y_issues_output.txt', 'utf8');
            } catch (e) {
              issuesOutput = 'No output file found';
            }
            
            try {
              fixedOutput = fs.readFileSync('pa11y_fixed_output.txt', 'utf8');
            } catch (e) {
              fixedOutput = 'No output file found';
            }
            
            const comment = `## üîç Pa11y Accessibility Test Results
            
            <details>
            <summary>accessibility-issues-demo.html (Expected to have issues)</summary>
            
            \`\`\`
            ${issuesOutput}
            \`\`\`
            
            </details>
            
            <details>
            <summary>accessibility-fixed-demo.html (Should pass)</summary>
            
            \`\`\`
            ${fixedOutput}
            \`\`\`
            
            </details>
            
            **Note:** The issues demo is expected to fail - it demonstrates common accessibility problems. The fixed demo should pass all tests.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
